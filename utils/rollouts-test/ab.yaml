apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollouts-ab-test
spec:
  replicas: 5
  strategy:
    canary:
      trafficRouting:
        alb:
          ingress: rollouts-ab-test-ingress
          servicePort: 80  # ALB에서 트래픽을 받을 서비스 포트 설정
      steps:
      - setWeight: 50  # Canary로 50% 트래픽 분배
      - pause: {}       # 관리자가 수동 승인해야 승격됨
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollouts-ab-test
  template:
    metadata:
      labels:
        app: rollouts-ab-test
    spec:
      containers:
      - name: rollouts-demo
        image: 084550838259.dkr.ecr.ap-northeast-2.amazonaws.com/dlink/next-app:v2.0.0
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
---
apiVersion: v1
kind: Service
metadata:
  name: rollouts-ab-test-v1  # 기존 버전 서비스 (A 그룹)
spec:
  selector:
    app: rollouts-ab-test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: rollouts-ab-test-v2  # 새로운 버전 서비스 (B 그룹)
spec:
  selector:
    app: rollouts-ab-test
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rollouts-ab-test-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: rollouts-group
spec:
  ingressClassName: alb
  rules:
  - host: rollouts.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rollouts-ab-test-v1
            port:
              number: 80
      - path: /b-test
        pathType: Prefix
        backend:
          service:
            name: rollouts-ab-test-v2
            port:
              number: 80

