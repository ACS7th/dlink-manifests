apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: dlk-monitoring
data:
  fluent.conf: |
    # -------------------------------------------------
    # ✅ [Kubernetes/애플리케이션 로그 수집]
    # - /var/log/containers/*.log 파일을 tail 방식으로 읽어,
    #   ISO8601 형식의 타임스탬프를 포함한 멀티라인 로그를
    #   시간, 스트림, 메시지로 분리합니다.
    # -------------------------------------------------
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      rotate_wait 10s
      skip_refresh_on_startup true
      <parse>
        @type multiline
        # 첫 줄이 ISO8601 형식의 타임스탬프로 시작한다고 가정
        format_firstline /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+(?:\+\d{2}(?::\d{2})?)?/
        # 시간, 스트림, 나머지 메시지 캡처 (공백으로 구분)
        format1 /^(?<time>[^\s]+)\s+(?<stream>\S+)\s+(?<log>.+)$/
      </parse>
    </source>

    <filter kubernetes.var.log.containers.**>
      @type record_transformer
      enable_ruby
      <record>
        # log 필드에서 역슬래시 제거 및 앞뒤 공백 제거 (데이터가 없으면 "EMPTY_LOG")
        log ${record["log"] ? record["log"].gsub(/\\\\/, '').strip : "EMPTY_LOG"}
        time ${record["time"]}
        stream ${record["stream"]}
      </record>
    </filter>

    <match kubernetes.**>
      @type elasticsearch
      host 192.168.3.82
      port 9200
      logstash_format true
      logstash_prefix fluentd
      logstash_dateformat %Y.%m.%d
      include_tag_key true
      tag_key @log_name
      <buffer>
        @type memory
        chunk_limit_size 2MB
        queue_limit_length 8
        flush_interval 10s
      </buffer>
    </match>

